Machine Coding
News Feed
Problem Statement
Your aim is to write a console program that can simulate a social network.  Demonstrate a working NewsFeed and its Sorting.
NewsFeed:
Users have the following capabilities (command to be used in [ - ]):
User Commands
[signup] Creates a new User.
[login] Logs in a user and shows the user's feed. (Simultaneous logins are possible)
News Feed Commands
[post] A user can post a feed item.
[follow] Users can follow other users.
[reply] A user can comment on another user's feed item.
[upvote/downvote] Upvote or downvote posts.
[shownewsfeed] Refresh and show the feed for logged-in user.



Input and output
The input should be taken in the form of statements.
The statements should consist of commands (list above) and arguments. Commands can be words like ‘signup’, ‘newsfeed’, ‘upvote’ etc.
Arguments can be separated from commands by special characters, something like ‘~’. As a result a statement to reply to post 005 can look something like
reply~005~this is the reply text
You may change the input output format without changing the functionality to suit your needs.
Input can be read from a file or STDIN or coded in a driver method.
Output can be written to a file or STDOUT.

Refer Sample Section Below for an Example.
Sorting:
News items are sorted based on the following:
Followed users : posts by followed users appear first.
Score (= upvotes - downvotes): higher the better.
Number of comments: higher the better.
Timestamp: more recent the better.

It will be good to have unit test covering sorting logic.

Bonus (Concurrency):
Demonstrate users simultaneously trying to
Comment on the post.
Upvote/Downvote posts.

Parallel interactions with concurrency can be demonstrated using a unit or integration test case.

Sample:
Input is in bold, output is not in bold.You need to print the output of shownewsfeed for a user, whenever he logs in.
signup~lucious
signup~albus
signup~tom
Login~tom
Welcome to the Social Network !!
There are no posts yet ..

post~I am going to be the darkest dark wizard of all time
post~I am lord Voldemort btw 3:)
login~lucious

id: 002
(0 upvotes, 0 downvotes)
tom
I am lord Voldemort btw 3:)
1994-04-19 10:11 PM

id: 001
(0 upvotes, 0 downvotes)
tom
I am going to be the darkest dark wizard of all time
1994-04-19 10:10 PM


upvote~001
follow~tom
reply~001~I am with you dark lord!
login~albus

id: 001
(1 upvote, 0 downvotes)
tom
I am going to be the darkest dark wizard of all time
1994-04-19 10:10 PM
	id: 003
	Lucious
	I am with you dark lord!
	1994-04-19 10:15 PM

id: 002
(0 upvotes, 0 downvotes)
tom
I am lord Voldemort btw 3:)
1994-04-19 10:11 PM


post~Happiness can be found, even in the darkest of times, if one only remembers to turn on the light
follow~tom
downvote~001
downvote~002
reply~002~LOL!
shownewsfeed

id: 001
(1 upvote, 1 downvotes)
tom
I am going to be the darkest dark wizard of all time
1994-04-19 10:10 PM
	id: 003
	lucius
	I am with you dark lord!
1994-04-19 10:15 PM

id: 002
(0 upvotes, 1 downvotes)
tom
I am lord Voldemort btw 3:)
1994-04-19 10:11 PM
	id: 005
	albus
	LOL!
	1994-04-19 10:30 PM

id: 004
(0 upvotes, 0 downvotes)
albus
Happiness can be found, even in the darkest of times, if one only remembers to turn on the light
1994-04-19 10:28 PM

Expectations and guidelines
You are allowed to access the internet.
You are free to use any language of your choice.
Do not use any external libraries. All of the code should be your own.
Implement the code using only in memory data structures or basic file handling. Use of databases is not allowed.
Create the sample data yourself. You can put it into a file, the main driver program itself.
Your code should be demo-able either through a main driver program or test cases. Code that does not run will not be evaluated.
Code should be modular and have the correct abstractions.
Either use Object Oriented design or functional programming.
Do not write monolithic code.
Code should be legible, readable and DRY.
Code should be extensible. Wherever applicable, use interfaces and contracts between different methods. It should be easy to add/remove functionality without re-writing the entire codebase.
Code should handle edge cases properly and fail gracefully. Add suitable exception handling, wherever applicable.
Please focus on the Bonus questions only after ensuring the required features are complete and demoable. The bonus portion would not be evaluated if any of the required functionality is missing.
Bonus Question Only: Code should handle concurrent modification of the data.
Save your code/project by your name and email it. Your program will be executed on another machine. So, explicitly specify dependencies, if any, in your email.
